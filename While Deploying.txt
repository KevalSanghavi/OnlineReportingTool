
While deploying on local system (Host: local system, Database: local system):
----------------------------------------------------------------------------

Change database.js (Set proper database URL and password).

Follow one of the below two based on your choice of running the front end angular app:
(I) If you want to run the front end angular app separately in your local system, then follow below two steps:
  (i) Change auth.service.ts (Add "http://localhost:3000/" before all the backend URLs).
  (ii) Change app.js (Set proper port number: keep "const port = 3000").
(II) If you are running the front end angular app separately in your local system, and now want to build and put it in the "public" folder in the main app so that the main app can use it directly, then follow below three steps:
  (i) Change auth.service.ts (Remove "http://localhost:3000/" before all the backend URLs).
  (ii) Run "ng build --prod --aot"  OR  "ng build --prod --aot=false" on the front end angular app, so that the angular app will be built and will be available directly in the "public" folder.
  (iii) Change app.js (Set proper port number: keep "const port = process.env.PORT || 8080").

Change login.js (Remove authentication in URL: login/addlogin).

Start the application: "npm start".

In the database: Import the schools collection: Run following command via cmd (Path: C:\Program Files\MongoDB\Server\3.4\bin):
mongoimport --db onlinereportingtooldb --collection schools --drop --file "<FilePath>\schools.json"

Set one admin account in the application:
In the database: Add one admin usersinfo in the database through cmd via query: db.usersinfo.insert({userid : "<userid>", isadmin : "Y", countyname : "AllCounties", firstname : "<firstname>", lastname : "<lastname>"})
In the database: Add one admin login detail in the database through the Postman via URL: "localhost:8080/login/addlogin". Add the login detail in this JSON format: { "userid" : "jon.doe@xyz.com", "password" : "Password#1" }
(Passwords will be stored in encrypted form in the database).

Change login.js (Add authentication in URL: login/addlogin).

Restart the application: "npm start".


==================================================================================

While deploying on Heroku (Host: Heroku, Database: mLab):
--------------------------------------------------------

Change database.js (Set proper database URL and password).

If you are running the front end angular app separately in your local system, and now want to build and put it in the "public" folder in the main app so that the main app can use it directly, then follow below three steps:
(i) Change auth.service.ts (Remove "http://localhost:3000/" before all the backend URLs).
(ii) Run "ng build --prod --aot"  OR  "ng build --prod --aot=false" on the front end angular app, so that the angular app will be built and will be available directly in the "public" folder.
(iii) Change app.js (Set proper port number: keep "const port = process.env.PORT || 8080").

Change login.js (Remove authentication in URL: login/addlogin).

Deploy the application on Heroku.

In the mLab database: Import the schools collection: Run following command via cmd (Path: C:\Program Files\MongoDB\Server\3.4\bin):
mongoimport -h <mLab URL> -d onlinereportingtooldb -c schools -u <dbuser> -p <password> --file "<FilePath>\schools.json"

Set one admin account in the application:
In the mLab database: Add one admin usersinfo in the database through mLab interface: insert following document in the usersinfo collection: ({userid : "john.smith2@xyz.com", isadmin : "Y", countyname : "AllCounties", firstname : "John", lastname : "Smith"})
In the mLab database: Add one admin login detail in the database through the Postman via URL: "<Heroku application URL>/login/addlogin". Add the login detail in this JSON format: { "userid" : "jon.doe@xyz.com", "password" : "Password#1" }
(Passwords will be stored in encrypted form in the database).

Change login.js (Add authentication in URL: login/addlogin).

Redeploy the application on Heroku.
